
const files = __FILES__;

const resultsTable = document.getElementById("results-table").getElementsByTagName("tbody")[0];
const testFilter = document.getElementById("test-filter");

let allData = [];

async function fetchData() {
    for (const file of files) {
        const response = await fetch(file);
        const data = await response.json();
        allData.push(data);
    }
    populateTable(allData);
    populateFilter(allData);
}

function populateTable(data) {
    resultsTable.innerHTML = "";
    for (const result of data) {
        const modelName = result.sampled_model_name;
        for (const test in result) {
            if (test !== "sampled_model_name") {
                const points = result[test].points;
                const total = result[test].total;
                const percentage = total > 0 ? ((points / total) * 100).toFixed(2) + "%" : "N/A";
                const row = resultsTable.insertRow();
                row.insertCell(0).innerText = modelName;
                row.insertCell(1).innerText = test;
                row.insertCell(2).innerText = points;
                row.insertCell(3).innerText = total;
                row.insertCell(4).innerText = percentage;
            }
        }
    }
}

function populateFilter(data) {
    const tests = new Set();
    for (const result of data) {
        for (const test in result) {
            if (test !== "sampled_model_name") {
                tests.add(test);
            }
        }
    }
    for (const test of tests) {
        const option = document.createElement("option");
        option.value = test;
        option.innerText = test;
        testFilter.appendChild(option);
    }
}

testFilter.addEventListener("change", () => {
    const selectedTest = testFilter.value;
    if (selectedTest === "all") {
        populateTable(allData);
    } else {
        const filteredData = allData.map(result => {
            const newResult = { sampled_model_name: result.sampled_model_name };
            if (result[selectedTest]) {
                newResult[selectedTest] = result[selectedTest];
            }
            return newResult;
        });
        populateTable(filteredData);
    }
});

fetchData();
